apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

}

android.libraryVariants.all { variant ->
    def javadoc = task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        def compileTask = variant.hasProperty('javaCompileProvider')? variant.javaCompileProvider.get() : variant.javaCompile
        source = compileTask.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        doFirst { classpath = files(compileTask.classpath.files) + files(ext.androidJar) }
        options.links("http://docs.oracle.com/javase/8/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    def compileTask = variant.hasProperty('javaCompileProvider')? variant.javaCompileProvider.get() : variant.javaCompile
    task.dependsOn compileTask
    task.dependsOn javadoc
    task.from compileTask.destinationDir
    task.exclude '**/BuildConfig.class'
    task.exclude '**/R.class'
    task.exclude '**/R$*.class'
    artifacts.add('archives', task)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':realtime-android')

    implementation("cn.leancloud:realtime-core:${rootProject.ext.sdkVersion}")

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:27.0.0')

    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-messaging'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

apply from: '../maven_push.gradle'
